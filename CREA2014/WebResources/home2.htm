<!DOCTYPE html>

<html lang="ja" xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="utf-8" />
    <script type="text/javascript" src="jquery-2.1.1.js"></script>
    <script type="text/javascript" src="jquery-ui-1.10.4.custom.js"></script>
    <script type="text/javascript" src="knockout-3.2.0.js"></script>
    <script type="text/javascript">
        var host = "%%host%%";
        var port = "%%port%%";

        var ws = null;

        $(function () {
            function AccountHolder() {
                var self = this;

                self.name = ko.observable("");
                self.accounts = ko.observableArray();
            }

            function AppViewModel() {
                var self = this;

                self.partBalance = ko.observable("");
                self.partAccount = ko.observable("");
                self.partLog = ko.observable("");
                self.partChat = ko.observable("");

                self.activatedPart = ko.observable(0);

                self.balanceName = ko.observable("");
                self.balanceValue = ko.observable(0);
                self.balanceUnit = ko.observable("");
                self.balance = ko.computed(function () {
                    return self.balanceValue() + self.balanceUnit();
                });

                self.usableName = ko.observable("");
                self.usableValue = ko.observable(0);
                self.usableUnit = ko.observable("");
                self.usableBalance = ko.computed(function () {
                    return self.usableValue() + self.usableUnit();
                });

                self.unusableName = ko.observable("");
                self.unusableValue = ko.observable(0);
                self.unusableUnit = ko.observable("");
                self.unusableBalance = ko.computed(function () {
                    return self.unusableValue() + self.unusableUnit();
                });

                self.buttonNewAccountHolderName = ko.observable("");
                self.buttonNewAccountHolderKeyName = ko.observable("");
                self.buttonNewAccountHolderKey = ko.observable();
                self.buttonNewAccountHolderCaption = ko.computed(function () {
                    return $("<div>").text(self.buttonNewAccountHolderName()).html() + "(<U>" + $("<div>").text(self.buttonNewAccountHolderKeyName()).html() + "</U>)...";
                });
                self.buttonNewAccountHolderClicked = function () {
                    ws.send("new_account_holder");
                }

                self.buttonNewAccountName = ko.observable("");
                self.buttonNewAccountKeyName = ko.observable("");
                self.buttonNewAccountKey = ko.observable();
                self.buttonNewAccountCaption = ko.computed(function () {
                    return $("<div>").text(self.buttonNewAccountName()).html() + "(<U>" + $("<div>").text(self.buttonNewAccountKeyName()).html() + "</U>)...";
                });
                self.buttonNewAccountClicked = function () {
                    ws.send("new_account");
                }

                self.accountHoldersColumnName = ko.observable("");
                self.accountHoldersColumnDescription = ko.observable("");
                self.accountHoldersColumnAddress = ko.observable("");
                self.anonymousAccountHolder = new AccountHolder();
                self.pseudonymousAccountHolders = ko.observableArray();

                self.logs = ko.observableArray();

                self.chats = ko.observableArray();

                self.activatePartBalance = function () {
                    self.activatedPart(0);
                }

                self.activatePartAccount = function () {
                    self.activatedPart(1);
                }

                self.activatePartLog = function () {
                    self.activatedPart(2);
                }

                self.activatePartChat = function () {
                    self.activatedPart(3);
                }
            }

            var vm = new AppViewModel();

            ko.applyBindings(vm);

            om = function (e) {
                if (e.data.indexOf("wss", 0) == 0) {
                    port = e.data.substring(4);

                    ws.close();
                    ws = new WebSocket("ws://" + host + ":" + port + "/");
                    ws.onmessage = om;
                }
                else if (e.data.indexOf("wallpaper", 0) == 0)
                    $(document.body).css("background-image", "url('" + e.data.substring(10) + "')");
                else if (e.data.indexOf("keydown", 0) == 0) {
                    var code = Number(e.data.substring(8));
                    if (code == NaN)
                        throw "keydown_nan";

                    var evt = $.Event("keydown");
                    evt.keyCode = code;
                    $(document).trigger(evt);
                }
                else if (e.data.indexOf("balanceUpdated", 0) == 0) {
                    var obj = JSON.parse(e.data.substring(15));

                    vm.balanceValue(obj.value);
                    vm.balanceUnit(obj.unit);

                    vm.usableValue(obj.usable.value);
                    vm.usableUnit(obj.usable.unit);

                    vm.unusableValue(obj.unusable.value);
                    vm.unusableUnit(obj.unusable.unit);
                }
                else if (e.data.indexOf("aahUpdated", 0) == 0) {
                    var obj = JSON.parse(e.data.substring(11));

                    vm.anonymousAccountHolder.accounts.removeAll();
                    var temp = vm.anonymousAccountHolder.accounts();
                    for (var i = 0; i < obj.accounts.length; i++) {
                        temp.push(obj.accounts[i]);
                    }
                    vm.anonymousAccountHolder.accounts.valueHasMutated();
                }
                else if (e.data.indexOf("pahsUpdated", 0) == 0) {
                    var array = JSON.parse(e.data.substring(12));

                    vm.pseudonymousAccountHolders.removeAll();
                    var temp = vm.pseudonymousAccountHolders();
                    for (var i = 0; i < array.length; i++) {
                        var pah = new AccountHolder();
                        pah.name(array[i].name);
                        var temp2 = pah.accounts();
                        for (var j = 0; j < array[i].accounts.length; j++) {
                            temp2.push(array[i].accounts[j]);
                        }
                        pah.accounts.valueHasMutated();
                        temp.push(pah);
                    }
                    vm.pseudonymousAccountHolders.valueHasMutated();
                }
                else if (e.data.indexOf("logAdded", 0) == 0) {
                    vm.logs.splice(0, 0, JSON.parse(e.data.substring(9)));
                }
                else if (e.data.indexOf("initial_data", 0) == 0) {
                    var obj = JSON.parse(e.data.substring(13));

                    document.title = obj.title;

                    vm.partBalance(obj.partBalance.name);
                    vm.partAccount(obj.partAccount.name);
                    vm.partLog(obj.partLog.name);
                    vm.partChat(obj.partChat.name);

                    vm.balanceName(obj.partBalance.detail.name);
                    vm.balanceValue(obj.partBalance.detail.value);
                    vm.balanceUnit(obj.partBalance.detail.unit);

                    vm.usableName(obj.partBalance.detail.usable.name);
                    vm.usableValue(obj.partBalance.detail.usable.value);
                    vm.usableUnit(obj.partBalance.detail.usable.unit);

                    vm.unusableName(obj.partBalance.detail.unusable.name);
                    vm.unusableValue(obj.partBalance.detail.unusable.value);
                    vm.unusableUnit(obj.partBalance.detail.unusable.unit);

                    vm.buttonNewAccountHolderName(obj.partAccount.accountButtons.buttonNewAccountHolder.name);
                    vm.buttonNewAccountHolderKeyName(obj.partAccount.accountButtons.buttonNewAccountHolder.keyName);
                    vm.buttonNewAccountHolderKey(obj.partAccount.accountButtons.buttonNewAccountHolder.key);

                    vm.buttonNewAccountName(obj.partAccount.accountButtons.buttonNewAccount.name);
                    vm.buttonNewAccountKey(obj.partAccount.accountButtons.buttonNewAccount.key);
                    vm.buttonNewAccountKeyName(obj.partAccount.accountButtons.buttonNewAccount.keyName);

                    vm.accountHoldersColumnName(obj.partAccount.accountHolderColumns.name);
                    vm.accountHoldersColumnDescription(obj.partAccount.accountHolderColumns.description);
                    vm.accountHoldersColumnAddress(obj.partAccount.accountHolderColumns.address);

                    vm.anonymousAccountHolder.name(obj.partAccount.anonymousAccountHolder.name);
                    var temp = vm.anonymousAccountHolder.accounts();
                    for (var i = 0; i < obj.partAccount.anonymousAccountHolder.accounts.length; i++) {
                        temp.push(obj.partAccount.anonymousAccountHolder.accounts[i]);
                    }
                    vm.anonymousAccountHolder.accounts.valueHasMutated();

                    var temp = vm.pseudonymousAccountHolders();
                    for (var i = 0; i < obj.partAccount.pseudonymousAccountHolders.length; i++) {
                        var pah = new AccountHolder();
                        pah.name(obj.partAccount.pseudonymousAccountHolders[i].name);
                        var temp2 = pah.accounts();
                        for (var j = 0; j < obj.partAccount.pseudonymousAccountHolders[i].accounts.length; j++) {
                            temp2.push(obj.partAccount.pseudonymousAccountHolders[i].accounts[j]);
                        }
                        pah.accounts.valueHasMutated();
                        temp.push(pah);
                    }
                    vm.pseudonymousAccountHolders.valueHasMutated();

                    for (var i = 0; i < obj.partLog.logs.length; i++) {
                        vm.logs.splice(0, 0, obj.partLog.logs[i]);
                    }

                    for (var i = 0; i < obj.partChat.chats.length; i++) {
                        vm.chats.splice(0, 0, obj.partChat.chats[i]);
                    }

                    AccUI();

                    document.body.style.display = "block";
                }
            };

            ws = new WebSocket("ws://" + host + ":" + port + "/");
            ws.onopen = function () {
            };
            ws.onerror = function (error) {
            };
            ws.onmessage = om;

            $(document).keydown(function (e) {
                if (vm.activatedPart() == 1) {
                    if (e.keyCode == vm.buttonNewAccountHolderKey()) {
                        ws.send("new_account_holder");
                    }
                    else if (e.keyCode == vm.buttonNewAccountKey()) {
                        ws.send("new_account");
                    }
                }
            });

            function AccUI() {
                var accounts = $(".acc");

                accounts.hover(function () {
                    if (!$(this).hasClass("acc_selected"))
                        $(this).switchClass("acc", "acc_hover", 200);
                }, function () {
                    if (!$(this).hasClass("acc_selected"))
                        $(this).switchClass("acc_hover", "acc", 200);
                });

                accounts.click(function () {
                    $(".acc_selected").switchClass("acc_selected", "acc", 200);
                    $(this).switchClass("acc_hover", "acc_selected", 200);
                });
            }
        });

        window.onunload = function () {
            if (ws != null)
                ws.close();
        };
    </script>

    <style type="text/css">
        * {
            margin: 0px;
            padding: 0px;
            font-family: 'MS Gothic';
        }

        html {
            height: 100%;
        }

        body {
            display: none;
            height: 100%;
            background-image: url("back.png");
            background-size: cover;
            background-attachment: fixed;
            background-position: top left;
        }

        #main {
            width: 100%;
            height: 100%;
        }

        #content {
            word-wrap: break-word;
            height: 100%;
            overflow: auto;
        }
    </style>
</head>
<body>
    <div id="main">
        <div id="content">
            <div id="tab1">
                <style type="text/css">
                    #tab1 {
                        height: 100%;
                    }

                    #tab1items {
                        float: left;
                        width: 20%;
                        height: 100%;
                        background-color: rgba(221,221,221,0.5);
                        overflow: hidden;
                    }

                    #tab1contents {
                        float: left;
                        width: 80%;
                        height: 100%;
                        overflow: auto;
                    }

                    .tab1_tabitem {
                        font-size: 20px;
                        font-weight: bold;
                        color: #0073ea;
                        margin: 10px 1px 10px 10px;
                        padding: 4px;
                        border: solid gray;
                        border-width: 2px 0px 2px 2px;
                        border-radius: 5px 0px 0px 5px;
                        box-shadow: 3px 3px 3px rgba(0,0,0,0.4);
                        background-color: lightgray;
                    }

                    .tab1_tabitem_hover {
                        font-size: 20px;
                        font-weight: bold;
                        color: white;
                        margin: 10px 1px 10px 10px;
                        padding: 4px;
                        border: solid gray;
                        border-width: 2px 0px 2px 2px;
                        border-radius: 5px 0px 0px 5px;
                        box-shadow: 3px 3px 3px rgba(0,0,0,0.4);
                        background-color: #0073ea;
                    }

                    .tab1_tabitem_selected {
                        font-size: 20px;
                        font-weight: bold;
                        color: #ff0084;
                        margin: 10px 0px 10px 10px;
                        padding: 4px;
                        border: solid gray;
                        border-width: 2px 0px 2px 2px;
                        border-radius: 5px 0px 0px 5px;
                        box-shadow: 4px 4px 4px rgba(0,0,0,0.2);
                        background-color: white;
                    }

                    .tab1_tabcontent {
                    }

                    .tab1_tabcontent_selected {
                        display: block;
                    }

                    #tab1_tabcontent3 {
                        background-color: rgba(0,0,0,0.7);
                        height: 100%;
                    }

                    #logs_container {
                        height: 100%;
                        overflow-y: scroll;
                    }

                    #chats_above_footer {
                        min-height: calc(100vh - 40px);
                    }

                    #chats_footer {
                        height: 40px;
                    }

                    #zandaka_label {
                        font-size: 32px;
                        font-weight: bold;
                        margin: 30px 0px 0px 30px;
                    }

                    #zandaka {
                        font-size: 16px;
                        font-weight: bold;
                        margin: 15px 0px 0px 45px;
                    }

                    #zandaka_kanou_label {
                        font-size: 12px;
                        font-weight: bold;
                        margin: 15px 0px 0px 45px;
                    }

                    #zandaka_kanou {
                        font-size: 12px;
                        font-weight: bold;
                        margin: 15px 0px 0px 45px;
                    }

                    #zandaka_huka_label {
                        font-size: 12px;
                        font-weight: bold;
                        margin: 15px 0px 0px 45px;
                    }

                    #zandaka_huka {
                        font-size: 12px;
                        font-weight: bold;
                        margin: 15px 0px 0px 45px;
                    }

                    .button {
                        float: left;
                    }

                    .button1_content {
                        font-size: 12px;
                        color: #0073ea;
                        margin: 1px;
                        padding: 4px;
                        border: solid gray;
                        border-width: 1px;
                        border-radius: 3px;
                        background-color: lightgray;
                    }

                    .button1_content_hover {
                        font-size: 12px;
                        color: white;
                        margin: 1px;
                        padding: 4px;
                        border: solid gray;
                        border-width: 1px;
                        border-radius: 3px;
                        background-color: #0073ea;
                    }

                    .button1_content_mouse_down {
                        font-size: 12px;
                        color: #ff0084;
                        margin: 1px;
                        padding: 4px;
                        border: solid gray;
                        border-width: 1px;
                        border-radius: 3px;
                        background-color: white;
                    }

                    .acc_hol {
                        clear: left;
                        margin: 15px 5px 0px 5px;
                        font-size: 16px;
                        border: solid;
                        border-color: rgba(128,128,128,0.4);
                        border-width: 2px;
                        background-color: rgba(255,255,255,0.4);
                    }

                    .acc_hol_title {
                        padding: 5px;
                    }

                    table {
                        display: inline-table;
                        width: 100%;
                        border-collapse: collapse;
                    }

                    .acc_header td, .acc_header th {
                        font-size: 12px;
                        white-space: pre;
                        padding: 3px;
                        color: #2e6e9e;
                        border: 1px solid #c5dbec;
                        background-color: rgba(223,239,252,0.5);
                    }

                    .acc td, .acc th {
                        font-size: 12px;
                        padding: 2px;
                        border: 1px solid #a6c9e2;
                    }

                    .acc_hover td, .acc_hover th {
                        font-size: 12px;
                        padding: 2px;
                        border: 1px solid #79b7e7;
                        background-color: rgba(208,229,245,0.5);
                    }

                    .acc_selected td, .acc_selected th {
                        font-size: 12px;
                        padding: 2px;
                        border: 1px solid #fad42e;
                        background-color: rgba(251,236,136,0.5);
                    }

                    .acc_name {
                        width: 25%;
                    }

                    .acc_desc {
                        width: 25%;
                    }

                    .acc_addr {
                        width: 50%;
                    }

                    .log_item_notification {
                        color: yellowgreen;
                    }

                    .log_item_error {
                        color: red;
                    }

                    .log_item_warning {
                        color: orange;
                    }
                </style>
                <script type="text/javascript">
                    $(function () {
                        var items = $(".tab1_tabitem");
                        items.hover(function () {
                            $(this).switchClass("tab1_tabitem", "tab1_tabitem_hover", 200);
                        }, function () {
                            $(this).switchClass("tab1_tabitem_hover", "tab1_tabitem", 200);
                        });

                        var buttons = $(".button1_content");
                        buttons.hover(function () {
                            $(this).switchClass("button1_content", "button1_content_hover", 200);
                        }, function () {
                            $(this).switchClass("button1_content_hover", "button1_content", 200);
                        });
                        buttons.mousedown(function () {
                            $(this).switchClass("button1_content_hover", "button1_content_mouse_down", 50);
                        });
                        buttons.mouseup(function () {
                            $(this).switchClass("button1_content_mouse_down", "button1_content_hover", 50);
                        });
                    });
                </script>
                <div id="tab1items">
                    <div id="tab1_tabitem1" class="tab1_tabitem" data-bind="text: partBalance, click: activatePartBalance, css: { tab1_tabitem_selected: activatedPart() == 0 }"></div>
                    <div id="tab1_tabitem2" class="tab1_tabitem" data-bind="text: partAccount, click: activatePartAccount, css: { tab1_tabitem_selected: activatedPart() == 1 }"></div>
                    <div id="tab1_tabitem3" class="tab1_tabitem" data-bind="text: partLog, click: activatePartLog, css: { tab1_tabitem_selected: activatedPart() == 2 }"></div>
                    <div id="tab1_tabitem4" class="tab1_tabitem" data-bind="text: partChat, click: activatePartChat, css: { tab1_tabitem_selected: activatedPart() == 3 }"></div>
                </div>
                <div id="tab1contents">
                    <div id="tab1_tabcontent1" class="tab1_tabcontent" data-bind="visible: activatedPart() == 0">
                        <div id="zandaka_label" data-bind="text: balanceName"></div>
                        <div id="zandaka" data-bind="text: balance"></div>
                        <div id="zandaka_kanou_label" data-bind="text: usableName"></div>
                        <div id="zandaka_kanou" data-bind="text: usableBalance"></div>
                        <div id="zandaka_huka_label" data-bind="text: unusableName"></div>
                        <div id="zandaka_huka" data-bind="text: unusableBalance"></div>
                    </div>
                    <div id="tab1_tabcontent2" class="tab1_tabcontent" data-bind="visible: activatedPart() == 1">
                        <div id="button1" class="button">
                            <div id="button1_content" class="button1_content" data-bind="html: buttonNewAccountHolderCaption, click: buttonNewAccountHolderClicked"></div>
                        </div>
                        <div id="button2" class="button">
                            <div id="button2_content" class="button1_content" data-bind="html: buttonNewAccountCaption, click: buttonNewAccountClicked"></div>
                        </div>
                        <div id="acc_hols_container">
                            <div class="acc_hol">
                                <div class="acc_hol_title" data-bind="text: anonymousAccountHolder.name"></div>
                                <table>
                                    <thead>
                                        <tr class="acc_header">
                                            <th data-bind="text: accountHoldersColumnName"></th>
                                            <th data-bind="text: accountHoldersColumnDescription"></th>
                                            <th data-bind="text: accountHoldersColumnAddress"></th>
                                        </tr>
                                    </thead>
                                    <tbody data-bind="foreach: anonymousAccountHolder.accounts">
                                        <tr class="acc">
                                            <td class="acc_name" data-bind="text: name"></td>
                                            <td class="acc_desc" data-bind="text: description"></td>
                                            <td class="acc_addr" data-bind="text: address"></td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                            <div id="psu_acc_hols" data-bind="foreach: pseudonymousAccountHolders">
                                <div class="acc_hol">
                                    <div class="acc_hol_title" data-bind="text: name"></div>
                                    <div>
                                        <table>
                                            <thead>
                                                <tr class="acc_header">
                                                    <th data-bind="text: $parent.accountHoldersColumnName"></th>
                                                    <th data-bind="text: $parent.accountHoldersColumnDescription"></th>
                                                    <th data-bind="text: $parent.accountHoldersColumnAddress"></th>
                                                </tr>
                                            </thead>
                                            <tbody data-bind="foreach: accounts">
                                                <tr class="acc">
                                                    <td class="acc_name" data-bind="text: name"></td>
                                                    <td class="acc_desc" data-bind="text: description"></td>
                                                    <td class="acc_addr" data-bind="text: address"></td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="tab1_tabcontent3" class="tab1_tabcontent" data-bind="visible: activatedPart() == 2">
                        <div id="logs_container">
                            <div data-bind="foreach: logs">
                                <span data-bind="text: message, css: { log_item_notification: type == 'notification', log_item_error: type == 'error', log_item_warning: type == 'warning' }"></span>
                                <br />
                            </div>
                        </div>
                    </div>
                    <div id="tab1_tabcontent4" class="tab1_tabcontent" data-bind="visible: activatedPart() == 3">
                        <div id="chats_container">
                            <div id="chats_above_footer">
                                <div data-bind="foreach: chats">
                                    <span data-bind="text: name + '> ' + message"></span>
                                    <br />
                                </div>
                            </div>
                            <div id="chats_footer">
                                <select data-bind="options: pseudonymousAccountHolders, optionsText: name"></select>
                                <input />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
</html>
